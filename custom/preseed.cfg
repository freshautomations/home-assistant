# Additional repositories, local[0-9] available
d-i apt-setup/local0/repository string https://download.docker.com/linux/debian bullseye stable
d-i apt-setup/local0/comment string Docker
# Enable deb-src lines
#d-i apt-setup/local0/source boolean true
# URL to the public key of the local repository; you must provide a key or
# apt will complain about the unauthenticated repository and so the
# sources.list line will be left commented out.
d-i apt-setup/local0/key string https://download.docker.com/linux/debian/gpg
#d-i apt-setup/local0/key string https://philosobear.com/key.gpg
# If the provided key file ends in ".asc" the key file needs to be an
# ASCII-armoured PGP key, if it ends in ".gpg" it needs to use the
# "GPG key public keyring" format, the "keybox database" format is
# currently not supported.

# By default the installer requires that repositories be authenticated
# using a known gpg key. This setting can be used to disable that
# authentication. Warning: Insecure, not recommended.
#d-i debian-installer/allow_unauthenticated boolean true

# Uncomment this to add multiarch configuration for i386
#d-i apt-setup/multiarch string i386


### Package selection
#tasksel tasksel/first multiselect standard, web-server, kde-desktop

# Or choose to not get the tasksel dialog displayed at all (and don't install
# any packages):
#d-i pkgsel/run_tasksel boolean false

# Individual additional packages to install
d-i pkgsel/include string \
    ca-certificates \
    apparmor jq wget curl udisks2 libglib2.0-bin network-manager dbus lsb-release systemd-journal-remote
# Whether to upgrade packages after debootstrap.
# Allowed values: none, safe-upgrade, full-upgrade
#d-i pkgsel/upgrade select none

#### Advanced options
### Running custom commands during the installation
# d-i preseeding is inherently not secure. Nothing in the installer checks
# for attempts at buffer overflows or other exploits of the values of a
# preconfiguration file like this one. Only use preconfiguration files from
# trusted locations! To drive that home, and because it's generally useful,
# here's a way to run any shell command you'd like inside the installer,
# automatically.

# This first command is run as early as possible, just after
# preseeding is read.
#d-i preseed/early_command string anna-install ca-certificates-udeb
# This command is run immediately before the partitioner starts. It may be
# useful to apply dynamic partitioner preseeding that depends on the state
# of the disks (which may not be visible when preseed/early_command runs).
#d-i partman/early_command \
#       string debconf-set partman-auto/disk "$(list-devices disk | head -n1)"
# This command is run just before the install finishes, but when there is
# still a usable /target directory. You can chroot to /target and use it
# directly, or use the apt-install and in-target commands to easily install
# packages and run commands in the target system.
d-i preseed/late_command string \
    in-target apt-get update -y; \
    in-target apt-get install docker-ce -y && \
    in-target apt-get remove modemmanager -y && \
    in-target apt-get autoremove -y && \
    in-target wget -qO /root/os-agent_1.4.1_linux_x86_64.deb https://github.com/home-assistant/os-agent/releases/download/1.4.1/os-agent_1.4.1_linux_x86_64.deb && \
    in-target wget -qO /root/homeassistant-supervised.deb https://github.com/home-assistant/supervised-installer/releases/latest/download/homeassistant-supervised.deb && \
    in-target dpkg -i /root/os-agent_1.4.1_linux_x86_64.deb && \
    in-target dpkg -i /root/homeassistant-supervised.deb && \
    in-target rm /root/os-agent_1.4.1_linux_x86_64.deb /root/homeassistant-supervised.deb && \
    in-target systemctl enable systemd-resolved && \
    mkdir -p /target/etc/apt/apt.conf.d && \
    mkdir -p /target/usr/share/hassio/ssl && \
    in-target openssl req -new -newkey rsa:2048 -keyout /usr/share/hassio/ssl/privkey.pem -out /usr/share/hassio/ssl/request.csr -batch -nodes -subj /O=Fresh\ Automations/CN=$(hostname)/CN=$(hostname -I | cut -d\  -f1)/ && \
    in-target openssl x509 -signkey /usr/share/hassio/ssl/privkey.pem -req -in /usr/share/hassio/ssl/request.csr -out /usr/share/hassio/ssl/fullchain.pem -days 720 -addtrust serverAuth && \
    echo "IP address: ." >> /target/etc/issue && \
    echo -e "#!/bin/bash\nsed -i \"s/^IP address: .*/IP address: \$(hostname -I | cut -d\\  -f1)/\" /etc/issue" > /target/etc/rc.local && \
    chmod 755 /target/etc/rc.local && \
    echo "Finished custom home-assistant preseed late_command execution."
